name: vn

on:
  push:
    branches:
      - "master"
jobs:
  beta:
    runs-on: ubuntu-latest
    env:
      working-directory: ./ws-app-web/packages/host-app-user
    steps:
      - name: setup node v14
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      - name: cleanup
        run: |
          rm -Rf ./*
      - name: clone workspace
        uses: actions/checkout@v2
        with:
          repository: Unitz-Co/ws-app-web
          path: ws-app-web
          token: ${{ secrets.PAT_TOKEN }}
          persist-credentials: true
      - name: clone env
        uses: actions/checkout@v2
        with:
          repository: Unitz-Co/envprod-app-web
          path: config/env-app-web
          token: ${{ secrets.PAT_TOKEN }}
          persist-credentials: true
      - name: clone config
        uses: actions/checkout@v2
        with:
          repository: Unitz-Co/ws-scripts
          path: config/ws-scripts
          token: ${{ secrets.PAT_TOKEN }}
          persist-credentials: true
      - name: checkout submodule
        run: |
          cd ws-app-web
          git config --file .gitmodules --get-regexp url | while read url; do
            git config --file=.gitmodules $(echo "$url" | sed -E "s/git@github.com:|https:\/\/github.com\//https:\/\/${{ secrets.PAT_TOKEN }}:${{ secrets.PAT_TOKEN }}@github.com\//")
          done
          git submodule sync
          git submodule update --init --recursive --remote --force
      - name: retrive certs and env
        working-directory: ${{env.working-directory}}
        run: |
          yarn config:env
      - name: check dir
        working-directory: ${{env.working-directory}}
        run: |
          PWD=$(pwd)
      - uses: actions/cache@v2
        id: cachenodemodules
        with:
          path: |
            ${{env.working-directory}}/node_modules
            ./ws-app-web/node_modules
          key: ${{ runner.os }}nodemodules-${{ hashFiles('**/yarn.lock', '**/package-lock.json', '**/package.json') }}
      - name: build modules
        working-directory: ${{env.working-directory}}
        if: steps.cachenodemodules.outputs.cache-hit != 'true'
        run: |
          yarn
      - name: Caching Gatsby
        id: gatsbycachebuild
        uses: actions/cache@v2
        with:
          path: |
            ${{env.working-directory}}/public
            ${{env.working-directory}}/.cache
          key: ${{ runner.os }}gatsbycachebuild-${{ github.run_id }}
      - name: init build
        working-directory: ${{env.working-directory}}
        if: steps.gatsbycachebuild.outputs.cache-hit != 'true'
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN}}
        run: |
          yarn build
          yarn unitzvn:deploy
      - name: yarn build:inc
        working-directory: ${{env.working-directory}}
        if: steps.gatsbycachebuild.outputs.cache-hit == 'true'
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN}}
        run: |
          yarn build:inc
          yarn unitzvn:deploy
      - uses: iRoachie/slack-github-actions@v2.3.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        with:
          status: ${{ job.status }}
        if: ${{ always() }}